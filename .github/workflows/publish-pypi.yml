name: Test and publish wheels
on: [push]
jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that a wheel builder finishes even if another fails
      # for platform_id / manylinux_image, see: https://cibuildwheel.pypa.io/en/stable/options/#build-skip
      # for os, see: https://docs.github.com/fr/actions/reference/workflows-and-actions/workflow-syntax#choosing-github-hosted-runners

      fail-fast: false
      matrix:
        include:
          # Windows 64 bits
          - os: windows-latest
            python: 310
            platform_id: win_amd64
          - os: windows-latest
            python: 311
            platform_id: win_amd64
          - os: windows-latest
            python: 312
            platform_id: win_amd64
          - os: windows-latest
            python: 313
            platform_id: win_amd64
          - os: windows-latest
            python: 313t
            platform_id: win_amd64
          - os: windows-latest
            python: 314
            platform_id: win_amd64
          - os: windows-latest
            python: 314t
            platform_id: win_amd64

          # # Linux 64 bit manylinux_2_28
          # - os: ubuntu-latest
          #   python: 310
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 311
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 312
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 313
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 313t
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 314
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-latest
          #   python: 314t
          #   platform_id: manylinux_x86_64
          #   manylinux_image: manylinux_2_28

          # # Linux ARM 64 bit manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 310
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 311
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 312
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 313
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 313t
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 314
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28
          # - os: ubuntu-24.04-arm
          #   python: 314t
          #   platform_id: manylinux_aarch64
          #   manylinux_image: manylinux_2_28

          # # MacOS x86_64
          # - os: macos-13
          #   python: 310
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 311
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 312
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 313
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 313t
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 314
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0
          # - os: macos-13
          #   python: 314t
          #   platform_id: macosx_x86_64
          #   deployment_target: 13.0


          # # MacOS ARM
          # - os: macos-14
          #   python: 310
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 311
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 312
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 313
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 313t
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 314
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0
          # - os: macos-14
          #   python: 314t
          #   platform_id: macosx_arm64
          #   deployment_target: 14.0

    steps:
      - name: Checkout CPT
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Build and test wheels
        env:
          CIBW_BEFORE_BUILD: "python -m pip install --upgrade pip"
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS: all
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_BEFORE_TEST: ${{ matrix.os != 'windows-latest' && 'CC=gcc CXX=g++' || '' }}
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: ${{ matrix.os == 'windows-latest' && 'CI\\github\\windows\\run_cibw_test.cmd' || 'bash CI/github/osx/run_cibw_test.sh' }}
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_MACOS: ${{ format('MACOSX_DEPLOYMENT_TARGET={0}', matrix.deployment_target) }}
          CIBW_ENABLE: cpython-freethreading

        run: bash CI/github/build_wheels.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.python }}-${{ matrix.platform_id }} # random unique name per workflow
          path: wheelhouse/*.whl

  publish:
    name: Publish on Pypi if commit is tagged
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Merge artifacts into dist/
      run: |
        mkdir -p dist
        find artifacts -name "*.whl" -exec cp {} dist/ \;
    - name: Show artifacts
      run: ls -R
      working-directory: dist
    - name: Publish package to Pypi
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.TOKEN_PYPI }}
